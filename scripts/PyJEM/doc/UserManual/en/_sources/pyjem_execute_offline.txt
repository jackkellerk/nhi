Execution with Offline
==========================


About offline
--------------
Before moving the TEM in the online version, 
it was created to check what kind of movement the created source code performs and 
to check the behavior in the absence of the device. 
All functions available in the online version can be used offline. 
Also, it may differ from the actual behavior of TEM.


import PyJEM.TEM3 and example of use
-------------------------------------------------------

In PyJEM.TEM3, you can use the functions divided by TEM3 class such as Aperture, Gun, Lens etc.

import PyJEM.TEM3
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
:: 

    Python3.5.1 |Anaconda 4.0.0 (64bit)| (default, Feb 15 2016, 09:49:46)
    [MSC v.1900 64 bit (AMD 64)] on win32
    Type "help", "copyright", "credits" or "license" for more information.
    >>>
    >>>from PyJEM.offline import TEM3
    Ready Communication

Get magnification information
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
:: 

    Python3.5.1 |Anaconda 4.0.0 (64bit)| (default, Feb 15 2016, 09:49:46)
    [MSC v.1900 64 bit (AMD 64)] on win32
    Type "help", "copyright", "credits" or "license" for more information.
    >>>
    >>>eos = TEM3.EOS3()
    >>>eos.GetMagValue()

| In the first line of the above CommandLine, an instance of a class that controls EOS of TEM3 is created. 
| The second line gets the current magnification.



import PyJEM.detector and example of use
-------------------------------------------------------

With PyJEM.detector, you can acquire and set detector conditions, acquire images, 
execute Auto functions, and so on.

import PyJEM.detector
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
:: 

    Python3.5.1 |Anaconda 4.0.0 (64bit)| (default, Feb 15 2016, 09:49:46)
    [MSC v.1900 64 bit (AMD 64)] on win32
    Type "help", "copyright", "credits" or "license" for more information.
    >>>
    >>>from PyJEM.offline import detector
    0 : camera
    1 : STEM Image
  
In the same way as the online version, 
the detector names that can be controlled by import are displayed in the list print statement.
This is a display of the **detector name** which can be controlled to the variable of list type at the time of import. 
The number written on the left is the element number.

Get detector condition
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
:: 

    Python3.5.1 |Anaconda 4.0.0 (64bit)| (default, Feb 15 2016, 09:49:46)
    [MSC v.1900 64 bit (AMD 64)] on win32
    Type "help", "copyright", "credits" or "license" for more information.
    >>>
    >>>det = detector.Detector("STEM Image")
    STEM Image is Correct!
    >>>det.get_detectorsetting()

| In the first line of the above CommandLine, 
  we create instances of detectors for which detector information is to be acquired.
  In the above CommandLine, for example, the target detector name is STEM Image. 
  Please enter the detector name you want to target in Detector (). 
  If a detector name controllable by PyJEM is entered, "* detector name * is Correct!" 
  Will be displayed.
| Get the state of the detector specified in the second line.
